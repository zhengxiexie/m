//Generated by ubrpcgen
//This file is generated automatically from idl file
//Do not edit this file, since any modification will be lost when this
//file is regenerated
#include "mcp.idl.mcp.h"
namespace idl
{
	const char * const mcp_servlet_trunk::ERROR_MSG []  = {
	};
	int mcp_servlet_trunk::setError(unsigned int err_no, const char * data)
	{
		if (err_no == 0)
		{
			return 0;
		}
		if ((size_t)err_no < sizeof(ubrpc::ERROR_MSG)/sizeof(char *))
		{
			setErrorMsgPtr(ERROR_MSG[err_no], data);
			return 0;
		}
		else
		{
			return -1;
		}
	}
	int mcp_servlet_trunk::dispatch(int64_t, const char * function, const mc_pack_t * param, mc_pack_t * result)
	{
		if (0 == strcmp(function, "get_test"))
		{
			mcp_get_test_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_test_response response_idl(getMempool());
			if (get_test(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_phone_maker_plat"))
		{
			mcp_get_phone_maker_plat_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_phone_maker_plat_response response_idl(getMempool());
			if (get_phone_maker_plat(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_from_classID"))
		{
			mcp_get_content_list_from_classID_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_from_classID_response response_idl(getMempool());
			if (get_content_list_from_classID(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_from_typeID"))
		{
			mcp_get_content_list_from_typeID_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_from_typeID_response response_idl(getMempool());
			if (get_content_list_from_typeID(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_class"))
		{
			mcp_get_content_class_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_class_response response_idl(getMempool());
			if (get_content_class(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_class_name"))
		{
			mcp_get_content_class_name_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_class_name_response response_idl(getMempool());
			if (get_content_class_name(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_diy_col_name"))
		{
			mcp_get_content_diy_col_name_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_diy_col_name_response response_idl(getMempool());
			if (get_content_diy_col_name(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_info"))
		{
			mcp_get_content_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_info_response response_idl(getMempool());
			if (get_content_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_download_info"))
		{
			mcp_get_download_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_download_info_response response_idl(getMempool());
			if (get_download_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list"))
		{
			mcp_get_content_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_response response_idl(getMempool());
			if (get_content_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_from_part"))
		{
			mcp_get_content_list_from_part_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_from_part_response response_idl(getMempool());
			if (get_content_list_from_part(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_count_from_class"))
		{
			mcp_get_content_count_from_class_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_count_from_class_response response_idl(getMempool());
			if (get_content_count_from_class(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_phone_info"))
		{
			mcp_get_phone_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_phone_info_response response_idl(getMempool());
			if (get_phone_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_phone_uaJson"))
		{
			mcp_get_phone_uaJson_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_phone_uaJson_response response_idl(getMempool());
			if (get_phone_uaJson(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "init_phone_uaJson_map"))
		{
			mcp_init_phone_uaJson_map_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_init_phone_uaJson_map_response response_idl(getMempool());
			if (init_phone_uaJson_map(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_phone_type_from_ID"))
		{
			mcp_get_phone_type_from_ID_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_phone_type_from_ID_response response_idl(getMempool());
			if (get_phone_type_from_ID(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_phone_headword_from_maker"))
		{
			mcp_get_phone_headword_from_maker_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_phone_headword_from_maker_response response_idl(getMempool());
			if (get_phone_headword_from_maker(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "search_phone_info"))
		{
			mcp_search_phone_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_search_phone_info_response response_idl(getMempool());
			if (search_phone_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_carriers_info_from_ip"))
		{
			mcp_get_carriers_info_from_ip_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_carriers_info_from_ip_response response_idl(getMempool());
			if (get_carriers_info_from_ip(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_phone_info_from_maker_plat"))
		{
			mcp_get_phone_info_from_maker_plat_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_phone_info_from_maker_plat_response response_idl(getMempool());
			if (get_phone_info_from_maker_plat(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_url_info_by_id"))
		{
			mcp_get_url_info_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_url_info_by_id_response response_idl(getMempool());
			if (get_url_info_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_url_info_by_class_id"))
		{
			mcp_get_url_info_by_class_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_url_info_by_class_id_response response_idl(getMempool());
			if (get_url_info_by_class_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_url_info_by_column_id"))
		{
			mcp_get_url_info_by_column_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_url_info_by_column_id_response response_idl(getMempool());
			if (get_url_info_by_column_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_from_phone"))
		{
			mcp_get_content_list_from_phone_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_from_phone_response response_idl(getMempool());
			if (get_content_list_from_phone(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_by_rank"))
		{
			mcp_get_content_list_by_rank_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_by_rank_response response_idl(getMempool());
			if (get_content_list_by_rank(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_label_by_content_id"))
		{
			mcp_get_label_by_content_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_label_by_content_id_response response_idl(getMempool());
			if (get_label_by_content_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_by_label"))
		{
			mcp_get_content_list_by_label_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_by_label_response response_idl(getMempool());
			if (get_content_list_by_label(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_topic_info"))
		{
			mcp_get_topic_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_topic_info_response response_idl(getMempool());
			if (get_topic_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_count_by_class"))
		{
			mcp_get_content_count_by_class_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_count_by_class_response response_idl(getMempool());
			if (get_content_count_by_class(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_img"))
		{
			mcp_get_content_img_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_img_response response_idl(getMempool());
			if (get_content_img(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_label_name_by_id"))
		{
			mcp_get_label_name_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_label_name_by_id_response response_idl(getMempool());
			if (get_label_name_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_by_date"))
		{
			mcp_get_content_list_by_date_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_by_date_response response_idl(getMempool());
			if (get_content_list_by_date(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_soft_info_by_id"))
		{
			mcp_get_soft_info_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_soft_info_by_id_response response_idl(getMempool());
			if (get_soft_info_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_android_theme_by_id"))
		{
			mcp_get_android_theme_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_android_theme_by_id_response response_idl(getMempool());
			if (get_android_theme_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_mcp_stat"))
		{
			mcp_get_mcp_stat_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_mcp_stat_response response_idl(getMempool());
			if (get_mcp_stat(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_col_list_by_topic"))
		{
			mcp_get_col_list_by_topic_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_col_list_by_topic_response response_idl(getMempool());
			if (get_col_list_by_topic(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_soft_list_by_col_id"))
		{
			mcp_get_soft_list_by_col_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_soft_list_by_col_id_response response_idl(getMempool());
			if (get_soft_list_by_col_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_soft_list_by_class_id"))
		{
			mcp_get_soft_list_by_class_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_soft_list_by_class_id_response response_idl(getMempool());
			if (get_soft_list_by_class_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_android_theme_by_col_id"))
		{
			mcp_get_android_theme_by_col_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_android_theme_by_col_id_response response_idl(getMempool());
			if (get_android_theme_by_col_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_android_theme_by_class_id"))
		{
			mcp_get_android_theme_by_class_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_android_theme_by_class_id_response response_idl(getMempool());
			if (get_android_theme_by_class_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_topic_list_by_type"))
		{
			mcp_get_topic_list_by_type_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_topic_list_by_type_response response_idl(getMempool());
			if (get_topic_list_by_type(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_sub_class_by_class"))
		{
			mcp_get_sub_class_by_class_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_sub_class_by_class_response response_idl(getMempool());
			if (get_sub_class_by_class(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "mcp_content_common_init"))
		{
			mcp_mcp_content_common_init_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_mcp_content_common_init_response response_idl(getMempool());
			if (mcp_content_common_init(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_phone_area_by_phone_num"))
		{
			mcp_get_phone_area_by_phone_num_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_phone_area_by_phone_num_response response_idl(getMempool());
			if (get_phone_area_by_phone_num(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "reload_config_by_id"))
		{
			mcp_reload_config_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_reload_config_by_id_response response_idl(getMempool());
			if (reload_config_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_ios_content_by_id"))
		{
			mcp_get_ios_content_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_ios_content_by_id_response response_idl(getMempool());
			if (get_ios_content_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_ios_content_by_class_id"))
		{
			mcp_get_ios_content_by_class_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_ios_content_by_class_id_response response_idl(getMempool());
			if (get_ios_content_by_class_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_ios_content_by_cp_id"))
		{
			mcp_get_ios_content_by_cp_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_ios_content_by_cp_id_response response_idl(getMempool());
			if (get_ios_content_by_cp_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_ios_content_by_col_id"))
		{
			mcp_get_ios_content_by_col_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_ios_content_by_col_id_response response_idl(getMempool());
			if (get_ios_content_by_col_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_ios_content_by_rank"))
		{
			mcp_get_ios_content_by_rank_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_ios_content_by_rank_response response_idl(getMempool());
			if (get_ios_content_by_rank(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_class_list_by_type_id"))
		{
			mcp_get_class_list_by_type_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_class_list_by_type_id_response response_idl(getMempool());
			if (get_class_list_by_type_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_ios_probably_like_list_by_id"))
		{
			mcp_get_ios_probably_like_list_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_ios_probably_like_list_by_id_response response_idl(getMempool());
			if (get_ios_probably_like_list_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_info_list"))
		{
			mcp_get_game_info_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_info_list_response response_idl(getMempool());
			if (get_game_info_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_info"))
		{
			mcp_get_game_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_info_response response_idl(getMempool());
			if (get_game_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_info_list_by_c_id"))
		{
			mcp_get_game_info_list_by_c_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_info_list_by_c_id_response response_idl(getMempool());
			if (get_game_info_list_by_c_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_score_by_imei_or_uid"))
		{
			mcp_get_game_score_by_imei_or_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_score_by_imei_or_uid_response response_idl(getMempool());
			if (get_game_score_by_imei_or_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_appinfo_by_packagename"))
		{
			mcp_get_appinfo_by_packagename_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_appinfo_by_packagename_response response_idl(getMempool());
			if (get_appinfo_by_packagename(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_score_by_packagename_and_versioncode"))
		{
			mcp_get_score_by_packagename_and_versioncode_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_score_by_packagename_and_versioncode_response response_idl(getMempool());
			if (get_score_by_packagename_and_versioncode(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_info_by_packagename_and_versioncode"))
		{
			mcp_get_content_info_by_packagename_and_versioncode_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_info_by_packagename_and_versioncode_response response_idl(getMempool());
			if (get_content_info_by_packagename_and_versioncode(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_info_by_packagename"))
		{
			mcp_get_content_info_by_packagename_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_info_by_packagename_response response_idl(getMempool());
			if (get_content_info_by_packagename(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_online_game_by_id"))
		{
			mcp_get_online_game_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_online_game_by_id_response response_idl(getMempool());
			if (get_online_game_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_online_game_by_class_id"))
		{
			mcp_get_online_game_by_class_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_online_game_by_class_id_response response_idl(getMempool());
			if (get_online_game_by_class_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_online_game_by_cp_id"))
		{
			mcp_get_online_game_by_cp_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_online_game_by_cp_id_response response_idl(getMempool());
			if (get_online_game_by_cp_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_online_game_by_col_id"))
		{
			mcp_get_online_game_by_col_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_online_game_by_col_id_response response_idl(getMempool());
			if (get_online_game_by_col_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_online_game_by_rank"))
		{
			mcp_get_online_game_by_rank_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_online_game_by_rank_response response_idl(getMempool());
			if (get_online_game_by_rank(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_grab_list_by_type"))
		{
			mcp_get_grab_list_by_type_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_grab_list_by_type_response response_idl(getMempool());
			if (get_grab_list_by_type(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_grab_info_by_c_id"))
		{
			mcp_get_grab_info_by_c_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_grab_info_by_c_id_response response_idl(getMempool());
			if (get_grab_info_by_c_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_grab_info_by_id"))
		{
			mcp_get_grab_info_by_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_grab_info_by_id_response response_idl(getMempool());
			if (get_grab_info_by_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "user_grab_num"))
		{
			mcp_user_grab_num_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_user_grab_num_response response_idl(getMempool());
			if (user_grab_num(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "user_grab_num_pre"))
		{
			mcp_user_grab_num_pre_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_user_grab_num_pre_response response_idl(getMempool());
			if (user_grab_num_pre(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "set_user_rating"))
		{
			mcp_set_user_rating_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_set_user_rating_response response_idl(getMempool());
			if (set_user_rating(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_user_rating"))
		{
			mcp_get_user_rating_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_user_rating_response response_idl(getMempool());
			if (get_user_rating(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_calender_list"))
		{
			mcp_get_calender_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_calender_list_response response_idl(getMempool());
			if (get_calender_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_by_mixed_topic_id"))
		{
			mcp_get_content_list_by_mixed_topic_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_by_mixed_topic_id_response response_idl(getMempool());
			if (get_content_list_by_mixed_topic_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_by_mixed_topic_id1"))
		{
			mcp_get_content_list_by_mixed_topic_id1_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_by_mixed_topic_id1_response response_idl(getMempool());
			if (get_content_list_by_mixed_topic_id1(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_user_grab_num"))
		{
			mcp_get_user_grab_num_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_user_grab_num_response response_idl(getMempool());
			if (get_user_grab_num(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "set_recently_played"))
		{
			mcp_set_recently_played_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_set_recently_played_response response_idl(getMempool());
			if (set_recently_played(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_recently_played_by_uid"))
		{
			mcp_get_recently_played_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_recently_played_by_uid_response response_idl(getMempool());
			if (get_recently_played_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "add_game_to_favorite"))
		{
			mcp_add_game_to_favorite_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_add_game_to_favorite_response response_idl(getMempool());
			if (add_game_to_favorite(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_favoraite_by_uid"))
		{
			mcp_get_favoraite_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_favoraite_by_uid_response response_idl(getMempool());
			if (get_favoraite_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_H5_latest_on_shelf_by_date"))
		{
			mcp_get_H5_latest_on_shelf_by_date_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_H5_latest_on_shelf_by_date_response response_idl(getMempool());
			if (get_H5_latest_on_shelf_by_date(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_H5_latest_on_shelf_by_date_and_type"))
		{
			mcp_get_H5_latest_on_shelf_by_date_and_type_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_H5_latest_on_shelf_by_date_and_type_response response_idl(getMempool());
			if (get_H5_latest_on_shelf_by_date_and_type(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_H5_info_list_by_col_id"))
		{
			mcp_get_H5_info_list_by_col_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_H5_info_list_by_col_id_response response_idl(getMempool());
			if (get_H5_info_list_by_col_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_imgurls_and_favorite_by_uid_cid"))
		{
			mcp_get_imgurls_and_favorite_by_uid_cid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_imgurls_and_favorite_by_uid_cid_response response_idl(getMempool());
			if (get_imgurls_and_favorite_by_uid_cid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_random_h5_games"))
		{
			mcp_get_random_h5_games_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_random_h5_games_response response_idl(getMempool());
			if (get_random_h5_games(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_info_by_col_id_and_type_id"))
		{
			mcp_get_info_by_col_id_and_type_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_info_by_col_id_and_type_id_response response_idl(getMempool());
			if (get_info_by_col_id_and_type_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_info_by_col_id"))
		{
			mcp_get_info_by_col_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_info_by_col_id_response response_idl(getMempool());
			if (get_info_by_col_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_soft_by_date_or_star"))
		{
			mcp_get_soft_by_date_or_star_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_soft_by_date_or_star_response response_idl(getMempool());
			if (get_soft_by_date_or_star(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_star_by_cid_and_type"))
		{
			mcp_get_star_by_cid_and_type_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_star_by_cid_and_type_response response_idl(getMempool());
			if (get_star_by_cid_and_type(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_list_from_classID_with_weight"))
		{
			mcp_get_content_list_from_classID_with_weight_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_list_from_classID_with_weight_response response_idl(getMempool());
			if (get_content_list_from_classID_with_weight(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_content_with_download_info"))
		{
			mcp_get_content_with_download_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_content_with_download_info_response response_idl(getMempool());
			if (get_content_with_download_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_contents_count"))
		{
			mcp_get_game_contents_count_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_contents_count_response response_idl(getMempool());
			if (get_game_contents_count(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_columns_info"))
		{
			mcp_get_columns_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_columns_info_response response_idl(getMempool());
			if (get_columns_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_once_consume_goods_list"))
		{
			mcp_get_once_consume_goods_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_once_consume_goods_list_response response_idl(getMempool());
			if (get_once_consume_goods_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_info_list_ext"))
		{
			mcp_get_game_info_list_ext_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_info_list_ext_response response_idl(getMempool());
			if (get_game_info_list_ext(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "add_new_download_game_by_uid"))
		{
			mcp_add_new_download_game_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_add_new_download_game_by_uid_response response_idl(getMempool());
			if (add_new_download_game_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_download_games_count_by_uid"))
		{
			mcp_get_download_games_count_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_download_games_count_by_uid_response response_idl(getMempool());
			if (get_download_games_count_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "is_user_has_relation_with"))
		{
			mcp_is_user_has_relation_with_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_is_user_has_relation_with_response response_idl(getMempool());
			if (is_user_has_relation_with(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_download_games_info_by_uid"))
		{
			mcp_get_download_games_info_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_download_games_info_by_uid_response response_idl(getMempool());
			if (get_download_games_info_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "add_new_guide_by_uid"))
		{
			mcp_add_new_guide_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_add_new_guide_by_uid_response response_idl(getMempool());
			if (add_new_guide_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "remove_guide_by_uid"))
		{
			mcp_remove_guide_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_remove_guide_by_uid_response response_idl(getMempool());
			if (remove_guide_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_guides_count_by_uid"))
		{
			mcp_get_guides_count_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_guides_count_by_uid_response response_idl(getMempool());
			if (get_guides_count_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_guides_info_by_uid"))
		{
			mcp_get_guides_info_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_guides_info_by_uid_response response_idl(getMempool());
			if (get_guides_info_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "add_new_favorite_by_uid"))
		{
			mcp_add_new_favorite_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_add_new_favorite_by_uid_response response_idl(getMempool());
			if (add_new_favorite_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "remove_favorite_by_uid"))
		{
			mcp_remove_favorite_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_remove_favorite_by_uid_response response_idl(getMempool());
			if (remove_favorite_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_favorites_count_by_uid"))
		{
			mcp_get_favorites_count_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_favorites_count_by_uid_response response_idl(getMempool());
			if (get_favorites_count_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_favorites_info_by_uid"))
		{
			mcp_get_favorites_info_by_uid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_favorites_info_by_uid_response response_idl(getMempool());
			if (get_favorites_info_by_uid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_grab_list"))
		{
			mcp_get_grab_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_grab_list_response response_idl(getMempool());
			if (get_grab_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_user_grab_num_list"))
		{
			mcp_get_user_grab_num_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_user_grab_num_list_response response_idl(getMempool());
			if (get_user_grab_num_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_common_adv_info"))
		{
			mcp_get_common_adv_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_common_adv_info_response response_idl(getMempool());
			if (get_common_adv_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_pt_game_basic_list_by_game_id"))
		{
			mcp_get_pt_game_basic_list_by_game_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_pt_game_basic_list_by_game_id_response response_idl(getMempool());
			if (get_pt_game_basic_list_by_game_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_pt_game_basic_list_by_app_key"))
		{
			mcp_get_pt_game_basic_list_by_app_key_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_pt_game_basic_list_by_app_key_response response_idl(getMempool());
			if (get_pt_game_basic_list_by_app_key(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_pt_app_key_by_game_id"))
		{
			mcp_get_pt_app_key_by_game_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_pt_app_key_by_game_id_response response_idl(getMempool());
			if (get_pt_app_key_by_game_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_pt_game_id_by_app_key"))
		{
			mcp_get_pt_game_id_by_app_key_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_pt_game_id_by_app_key_response response_idl(getMempool());
			if (get_pt_game_id_by_app_key(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "exist_pt_game_by_game_id"))
		{
			mcp_exist_pt_game_by_game_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_exist_pt_game_by_game_id_response response_idl(getMempool());
			if (exist_pt_game_by_game_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "is_same_pt_game"))
		{
			mcp_is_same_pt_game_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_is_same_pt_game_response response_idl(getMempool());
			if (is_same_pt_game(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "remove_pt_game_basic_list_by_app_key"))
		{
			mcp_remove_pt_game_basic_list_by_app_key_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_remove_pt_game_basic_list_by_app_key_response response_idl(getMempool());
			if (remove_pt_game_basic_list_by_app_key(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "add_new_user_consume_record"))
		{
			mcp_add_new_user_consume_record_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_add_new_user_consume_record_response response_idl(getMempool());
			if (add_new_user_consume_record(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_news_info_list"))
		{
			mcp_get_game_news_info_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_news_info_list_response response_idl(getMempool());
			if (get_game_news_info_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_news_entire_info"))
		{
			mcp_get_game_news_entire_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_news_entire_info_response response_idl(getMempool());
			if (get_game_news_entire_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_netgame_activity_info"))
		{
			mcp_get_netgame_activity_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_netgame_activity_info_response response_idl(getMempool());
			if (get_netgame_activity_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_download_app_info"))
		{
			mcp_get_game_download_app_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_download_app_info_response response_idl(getMempool());
			if (get_game_download_app_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_dbapp_detail_info"))
		{
			mcp_get_game_dbapp_detail_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_dbapp_detail_info_response response_idl(getMempool());
			if (get_game_dbapp_detail_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_device_download_games_info_by_udid"))
		{
			mcp_get_device_download_games_info_by_udid_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_device_download_games_info_by_udid_response response_idl(getMempool());
			if (get_device_download_games_info_by_udid(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "add_device_download_game"))
		{
			mcp_add_device_download_game_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_add_device_download_game_response response_idl(getMempool());
			if (add_device_download_game(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_content_info_list_ext"))
		{
			mcp_get_game_content_info_list_ext_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_content_info_list_ext_response response_idl(getMempool());
			if (get_game_content_info_list_ext(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_currency_rate"))
		{
			mcp_get_game_currency_rate_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_currency_rate_response response_idl(getMempool());
			if (get_game_currency_rate(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_download_info"))
		{
			mcp_get_game_download_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_download_info_response response_idl(getMempool());
			if (get_game_download_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_news_without_pbus"))
		{
			mcp_get_game_news_without_pbus_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_news_without_pbus_response response_idl(getMempool());
			if (get_game_news_without_pbus(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_mobile_music_info"))
		{
			mcp_get_mobile_music_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_mobile_music_info_response response_idl(getMempool());
			if (get_mobile_music_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "set_mobile_music_ptag_by_ring_id"))
		{
			mcp_set_mobile_music_ptag_by_ring_id_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_set_mobile_music_ptag_by_ring_id_response response_idl(getMempool());
			if (set_mobile_music_ptag_by_ring_id(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_mobile_music_ring_id_by_ptag"))
		{
			mcp_get_mobile_music_ring_id_by_ptag_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_mobile_music_ring_id_by_ptag_response response_idl(getMempool());
			if (get_mobile_music_ring_id_by_ptag(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_championship_info"))
		{
			mcp_get_championship_info_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_championship_info_response response_idl(getMempool());
			if (get_championship_info(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "user_add_coins"))
		{
			mcp_user_add_coins_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_user_add_coins_response response_idl(getMempool());
			if (user_add_coins(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_game_news"))
		{
			mcp_get_game_news_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_game_news_response response_idl(getMempool());
			if (get_game_news(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_ip_province"))
		{
			mcp_get_ip_province_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_ip_province_response response_idl(getMempool());
			if (get_ip_province(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_question_type_name"))
		{
			mcp_get_question_type_name_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_question_type_name_response response_idl(getMempool());
			if (get_question_type_name(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "submit_question"))
		{
			mcp_submit_question_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_submit_question_response response_idl(getMempool());
			if (submit_question(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_user_question"))
		{
			mcp_get_user_question_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_user_question_response response_idl(getMempool());
			if (get_user_question(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_qp_activity"))
		{
			mcp_get_qp_activity_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_qp_activity_response response_idl(getMempool());
			if (get_qp_activity(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_qp_activity_person"))
		{
			mcp_get_qp_activity_person_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_qp_activity_person_response response_idl(getMempool());
			if (get_qp_activity_person(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_person_award_list"))
		{
			mcp_get_person_award_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_person_award_list_response response_idl(getMempool());
			if (get_person_award_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_person_all_awards"))
		{
			mcp_get_person_all_awards_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_person_all_awards_response response_idl(getMempool());
			if (get_person_all_awards(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_person_award"))
		{
			mcp_get_person_award_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_person_award_response response_idl(getMempool());
			if (get_person_award(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "get_award_list"))
		{
			mcp_get_award_list_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_get_award_list_response response_idl(getMempool());
			if (get_award_list(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		if (0 == strcmp(function, "grab_award"))
		{
			mcp_grab_award_params param_idl(getMempool());
			if (param != 0)
			{
				param_idl.load(param);
			}
			mcp_grab_award_response response_idl(getMempool());
			if (grab_award(param_idl, response_idl))
			{
				CWARNING_LOG("%s", "user function error");
				return -1;
			}
			if (isError())
			{
				CWARNING_LOG("%s", "user error set");
				return writeError(result);
			}
			else
			{
				response_idl.save(result);
				return 0;
			}
		}
		CWARNING_LOG("%s", "method not found");
		return -1;
	}
}
