//Generated by ubrpcgen
//This file is generated automatically from idl file
//Do not edit this file, since any modification will be lost when this
//file is regenerated
#ifndef __MCP_IDL_MCP_H_
#define __MCP_IDL_MCP_H_
#include "mcp.idl.h"
#include "ubrpc/servlet/servlet.h"
namespace idl
{
	class mcp_servlet_trunk : public ubrpc::Servlet
	{
	protected:
		static const char * const ERROR_MSG [];
		/**
		 * @brief
		 * 设置出错信息，错误号为ERROR_常量，data为用户自定义字符串
		**/
		int setError(unsigned int err_no, const char * data);
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_test(const mcp_get_test_params &, mcp_get_test_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_phone_maker_plat(const mcp_get_phone_maker_plat_params &, mcp_get_phone_maker_plat_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_from_classID(const mcp_get_content_list_from_classID_params &, mcp_get_content_list_from_classID_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_from_typeID(const mcp_get_content_list_from_typeID_params &, mcp_get_content_list_from_typeID_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_class(const mcp_get_content_class_params &, mcp_get_content_class_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_class_name(const mcp_get_content_class_name_params &, mcp_get_content_class_name_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_diy_col_name(const mcp_get_content_diy_col_name_params &, mcp_get_content_diy_col_name_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_info(const mcp_get_content_info_params &, mcp_get_content_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_download_info(const mcp_get_download_info_params &, mcp_get_download_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list(const mcp_get_content_list_params &, mcp_get_content_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_from_part(const mcp_get_content_list_from_part_params &, mcp_get_content_list_from_part_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_count_from_class(const mcp_get_content_count_from_class_params &, mcp_get_content_count_from_class_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_phone_info(const mcp_get_phone_info_params &, mcp_get_phone_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_phone_uaJson(const mcp_get_phone_uaJson_params &, mcp_get_phone_uaJson_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int init_phone_uaJson_map(const mcp_init_phone_uaJson_map_params &, mcp_init_phone_uaJson_map_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_phone_type_from_ID(const mcp_get_phone_type_from_ID_params &, mcp_get_phone_type_from_ID_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_phone_headword_from_maker(const mcp_get_phone_headword_from_maker_params &, mcp_get_phone_headword_from_maker_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int search_phone_info(const mcp_search_phone_info_params &, mcp_search_phone_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_carriers_info_from_ip(const mcp_get_carriers_info_from_ip_params &, mcp_get_carriers_info_from_ip_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_phone_info_from_maker_plat(const mcp_get_phone_info_from_maker_plat_params &, mcp_get_phone_info_from_maker_plat_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_url_info_by_id(const mcp_get_url_info_by_id_params &, mcp_get_url_info_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_url_info_by_class_id(const mcp_get_url_info_by_class_id_params &, mcp_get_url_info_by_class_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_url_info_by_column_id(const mcp_get_url_info_by_column_id_params &, mcp_get_url_info_by_column_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_from_phone(const mcp_get_content_list_from_phone_params &, mcp_get_content_list_from_phone_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_by_rank(const mcp_get_content_list_by_rank_params &, mcp_get_content_list_by_rank_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_label_by_content_id(const mcp_get_label_by_content_id_params &, mcp_get_label_by_content_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_by_label(const mcp_get_content_list_by_label_params &, mcp_get_content_list_by_label_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_topic_info(const mcp_get_topic_info_params &, mcp_get_topic_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_count_by_class(const mcp_get_content_count_by_class_params &, mcp_get_content_count_by_class_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_img(const mcp_get_content_img_params &, mcp_get_content_img_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_label_name_by_id(const mcp_get_label_name_by_id_params &, mcp_get_label_name_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_by_date(const mcp_get_content_list_by_date_params &, mcp_get_content_list_by_date_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_soft_info_by_id(const mcp_get_soft_info_by_id_params &, mcp_get_soft_info_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_android_theme_by_id(const mcp_get_android_theme_by_id_params &, mcp_get_android_theme_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_mcp_stat(const mcp_get_mcp_stat_params &, mcp_get_mcp_stat_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_col_list_by_topic(const mcp_get_col_list_by_topic_params &, mcp_get_col_list_by_topic_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_soft_list_by_col_id(const mcp_get_soft_list_by_col_id_params &, mcp_get_soft_list_by_col_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_soft_list_by_class_id(const mcp_get_soft_list_by_class_id_params &, mcp_get_soft_list_by_class_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_android_theme_by_col_id(const mcp_get_android_theme_by_col_id_params &, mcp_get_android_theme_by_col_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_android_theme_by_class_id(const mcp_get_android_theme_by_class_id_params &, mcp_get_android_theme_by_class_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_topic_list_by_type(const mcp_get_topic_list_by_type_params &, mcp_get_topic_list_by_type_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_sub_class_by_class(const mcp_get_sub_class_by_class_params &, mcp_get_sub_class_by_class_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int mcp_content_common_init(const mcp_mcp_content_common_init_params &, mcp_mcp_content_common_init_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_phone_area_by_phone_num(const mcp_get_phone_area_by_phone_num_params &, mcp_get_phone_area_by_phone_num_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int reload_config_by_id(const mcp_reload_config_by_id_params &, mcp_reload_config_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_ios_content_by_id(const mcp_get_ios_content_by_id_params &, mcp_get_ios_content_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_ios_content_by_class_id(const mcp_get_ios_content_by_class_id_params &, mcp_get_ios_content_by_class_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_ios_content_by_cp_id(const mcp_get_ios_content_by_cp_id_params &, mcp_get_ios_content_by_cp_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_ios_content_by_col_id(const mcp_get_ios_content_by_col_id_params &, mcp_get_ios_content_by_col_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_ios_content_by_rank(const mcp_get_ios_content_by_rank_params &, mcp_get_ios_content_by_rank_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_class_list_by_type_id(const mcp_get_class_list_by_type_id_params &, mcp_get_class_list_by_type_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_ios_probably_like_list_by_id(const mcp_get_ios_probably_like_list_by_id_params &, mcp_get_ios_probably_like_list_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_info_list(const mcp_get_game_info_list_params &, mcp_get_game_info_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_info(const mcp_get_game_info_params &, mcp_get_game_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_info_list_by_c_id(const mcp_get_game_info_list_by_c_id_params &, mcp_get_game_info_list_by_c_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_score_by_imei_or_uid(const mcp_get_game_score_by_imei_or_uid_params &, mcp_get_game_score_by_imei_or_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_appinfo_by_packagename(const mcp_get_appinfo_by_packagename_params &, mcp_get_appinfo_by_packagename_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_score_by_packagename_and_versioncode(const mcp_get_score_by_packagename_and_versioncode_params &, mcp_get_score_by_packagename_and_versioncode_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_info_by_packagename_and_versioncode(const mcp_get_content_info_by_packagename_and_versioncode_params &, mcp_get_content_info_by_packagename_and_versioncode_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_info_by_packagename(const mcp_get_content_info_by_packagename_params &, mcp_get_content_info_by_packagename_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_online_game_by_id(const mcp_get_online_game_by_id_params &, mcp_get_online_game_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_online_game_by_class_id(const mcp_get_online_game_by_class_id_params &, mcp_get_online_game_by_class_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_online_game_by_cp_id(const mcp_get_online_game_by_cp_id_params &, mcp_get_online_game_by_cp_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_online_game_by_col_id(const mcp_get_online_game_by_col_id_params &, mcp_get_online_game_by_col_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_online_game_by_rank(const mcp_get_online_game_by_rank_params &, mcp_get_online_game_by_rank_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_grab_list_by_type(const mcp_get_grab_list_by_type_params &, mcp_get_grab_list_by_type_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_grab_info_by_c_id(const mcp_get_grab_info_by_c_id_params &, mcp_get_grab_info_by_c_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_grab_info_by_id(const mcp_get_grab_info_by_id_params &, mcp_get_grab_info_by_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int user_grab_num(const mcp_user_grab_num_params &, mcp_user_grab_num_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int user_grab_num_pre(const mcp_user_grab_num_pre_params &, mcp_user_grab_num_pre_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int set_user_rating(const mcp_set_user_rating_params &, mcp_set_user_rating_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_user_rating(const mcp_get_user_rating_params &, mcp_get_user_rating_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_calender_list(const mcp_get_calender_list_params &, mcp_get_calender_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_by_mixed_topic_id(const mcp_get_content_list_by_mixed_topic_id_params &, mcp_get_content_list_by_mixed_topic_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_by_mixed_topic_id1(const mcp_get_content_list_by_mixed_topic_id1_params &, mcp_get_content_list_by_mixed_topic_id1_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_user_grab_num(const mcp_get_user_grab_num_params &, mcp_get_user_grab_num_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int set_recently_played(const mcp_set_recently_played_params &, mcp_set_recently_played_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_recently_played_by_uid(const mcp_get_recently_played_by_uid_params &, mcp_get_recently_played_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int add_game_to_favorite(const mcp_add_game_to_favorite_params &, mcp_add_game_to_favorite_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_favoraite_by_uid(const mcp_get_favoraite_by_uid_params &, mcp_get_favoraite_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_H5_latest_on_shelf_by_date(const mcp_get_H5_latest_on_shelf_by_date_params &, mcp_get_H5_latest_on_shelf_by_date_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_H5_latest_on_shelf_by_date_and_type(const mcp_get_H5_latest_on_shelf_by_date_and_type_params &, mcp_get_H5_latest_on_shelf_by_date_and_type_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_H5_info_list_by_col_id(const mcp_get_H5_info_list_by_col_id_params &, mcp_get_H5_info_list_by_col_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_imgurls_and_favorite_by_uid_cid(const mcp_get_imgurls_and_favorite_by_uid_cid_params &, mcp_get_imgurls_and_favorite_by_uid_cid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_random_h5_games(const mcp_get_random_h5_games_params &, mcp_get_random_h5_games_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_info_by_col_id_and_type_id(const mcp_get_info_by_col_id_and_type_id_params &, mcp_get_info_by_col_id_and_type_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_info_by_col_id(const mcp_get_info_by_col_id_params &, mcp_get_info_by_col_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_soft_by_date_or_star(const mcp_get_soft_by_date_or_star_params &, mcp_get_soft_by_date_or_star_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_star_by_cid_and_type(const mcp_get_star_by_cid_and_type_params &, mcp_get_star_by_cid_and_type_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_list_from_classID_with_weight(const mcp_get_content_list_from_classID_with_weight_params &, mcp_get_content_list_from_classID_with_weight_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_content_with_download_info(const mcp_get_content_with_download_info_params &, mcp_get_content_with_download_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_contents_count(const mcp_get_game_contents_count_params &, mcp_get_game_contents_count_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_columns_info(const mcp_get_columns_info_params &, mcp_get_columns_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_once_consume_goods_list(const mcp_get_once_consume_goods_list_params &, mcp_get_once_consume_goods_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_info_list_ext(const mcp_get_game_info_list_ext_params &, mcp_get_game_info_list_ext_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int add_new_download_game_by_uid(const mcp_add_new_download_game_by_uid_params &, mcp_add_new_download_game_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_download_games_count_by_uid(const mcp_get_download_games_count_by_uid_params &, mcp_get_download_games_count_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int is_user_has_relation_with(const mcp_is_user_has_relation_with_params &, mcp_is_user_has_relation_with_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_download_games_info_by_uid(const mcp_get_download_games_info_by_uid_params &, mcp_get_download_games_info_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int add_new_guide_by_uid(const mcp_add_new_guide_by_uid_params &, mcp_add_new_guide_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int remove_guide_by_uid(const mcp_remove_guide_by_uid_params &, mcp_remove_guide_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_guides_count_by_uid(const mcp_get_guides_count_by_uid_params &, mcp_get_guides_count_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_guides_info_by_uid(const mcp_get_guides_info_by_uid_params &, mcp_get_guides_info_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int add_new_favorite_by_uid(const mcp_add_new_favorite_by_uid_params &, mcp_add_new_favorite_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int remove_favorite_by_uid(const mcp_remove_favorite_by_uid_params &, mcp_remove_favorite_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_favorites_count_by_uid(const mcp_get_favorites_count_by_uid_params &, mcp_get_favorites_count_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_favorites_info_by_uid(const mcp_get_favorites_info_by_uid_params &, mcp_get_favorites_info_by_uid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_grab_list(const mcp_get_grab_list_params &, mcp_get_grab_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_user_grab_num_list(const mcp_get_user_grab_num_list_params &, mcp_get_user_grab_num_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_common_adv_info(const mcp_get_common_adv_info_params &, mcp_get_common_adv_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_pt_game_basic_list_by_game_id(const mcp_get_pt_game_basic_list_by_game_id_params &, mcp_get_pt_game_basic_list_by_game_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_pt_game_basic_list_by_app_key(const mcp_get_pt_game_basic_list_by_app_key_params &, mcp_get_pt_game_basic_list_by_app_key_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_pt_app_key_by_game_id(const mcp_get_pt_app_key_by_game_id_params &, mcp_get_pt_app_key_by_game_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_pt_game_id_by_app_key(const mcp_get_pt_game_id_by_app_key_params &, mcp_get_pt_game_id_by_app_key_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int exist_pt_game_by_game_id(const mcp_exist_pt_game_by_game_id_params &, mcp_exist_pt_game_by_game_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int is_same_pt_game(const mcp_is_same_pt_game_params &, mcp_is_same_pt_game_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int remove_pt_game_basic_list_by_app_key(const mcp_remove_pt_game_basic_list_by_app_key_params &, mcp_remove_pt_game_basic_list_by_app_key_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int add_new_user_consume_record(const mcp_add_new_user_consume_record_params &, mcp_add_new_user_consume_record_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_news_info_list(const mcp_get_game_news_info_list_params &, mcp_get_game_news_info_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_news_entire_info(const mcp_get_game_news_entire_info_params &, mcp_get_game_news_entire_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_netgame_activity_info(const mcp_get_netgame_activity_info_params &, mcp_get_netgame_activity_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_download_app_info(const mcp_get_game_download_app_info_params &, mcp_get_game_download_app_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_dbapp_detail_info(const mcp_get_game_dbapp_detail_info_params &, mcp_get_game_dbapp_detail_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_device_download_games_info_by_udid(const mcp_get_device_download_games_info_by_udid_params &, mcp_get_device_download_games_info_by_udid_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int add_device_download_game(const mcp_add_device_download_game_params &, mcp_add_device_download_game_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_content_info_list_ext(const mcp_get_game_content_info_list_ext_params &, mcp_get_game_content_info_list_ext_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_currency_rate(const mcp_get_game_currency_rate_params &, mcp_get_game_currency_rate_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_download_info(const mcp_get_game_download_info_params &, mcp_get_game_download_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_news_without_pbus(const mcp_get_game_news_without_pbus_params &, mcp_get_game_news_without_pbus_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_mobile_music_info(const mcp_get_mobile_music_info_params &, mcp_get_mobile_music_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int set_mobile_music_ptag_by_ring_id(const mcp_set_mobile_music_ptag_by_ring_id_params &, mcp_set_mobile_music_ptag_by_ring_id_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_mobile_music_ring_id_by_ptag(const mcp_get_mobile_music_ring_id_by_ptag_params &, mcp_get_mobile_music_ring_id_by_ptag_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_championship_info(const mcp_get_championship_info_params &, mcp_get_championship_info_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int user_add_coins(const mcp_user_add_coins_params &, mcp_user_add_coins_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_game_news(const mcp_get_game_news_params &, mcp_get_game_news_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_ip_province(const mcp_get_ip_province_params &, mcp_get_ip_province_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_question_type_name(const mcp_get_question_type_name_params &, mcp_get_question_type_name_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int submit_question(const mcp_submit_question_params &, mcp_submit_question_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_user_question(const mcp_get_user_question_params &, mcp_get_user_question_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_qp_activity(const mcp_get_qp_activity_params &, mcp_get_qp_activity_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_qp_activity_person(const mcp_get_qp_activity_person_params &, mcp_get_qp_activity_person_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_person_award_list(const mcp_get_person_award_list_params &, mcp_get_person_award_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_person_all_awards(const mcp_get_person_all_awards_params &, mcp_get_person_all_awards_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_person_award(const mcp_get_person_award_params &, mcp_get_person_award_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int get_award_list(const mcp_get_award_list_params &, mcp_get_award_list_response &) = 0;
		/**
		 * @brief
		 * rpc调用的参考签名。用户实现子类中必须必须重写这个函数
		**/
		virtual int grab_award(const mcp_grab_award_params &, mcp_grab_award_response &) = 0;
		/**
		 * @brief
		 * rpc跳转表
		**/
		virtual int dispatch(int64_t id, const char * function, const mc_pack_t * param, mc_pack_t * result);
	};
}
#endif //__MCP_IDL_MCP_H_
